language: java
jdk:
  - openjdk8

branches:
    only:
      - master

# Travis Ci 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script:
  "./gradlew clean build"

before_install:
  - chmod +x gradlew

# code deploy는 jar 파일은 인식하지 못하므로 jar 기타 설정파일들을 모아 압축한다
before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/springBoot-webservice.zip # deploy로 zip 파일 이동
#  - zip -r springBoot-webservice *
#  - mkdir -p deploy
#  - mv springBoot-webservice.zip deploy/springBoot-webservice.zip
#travisci는 디렉토리 단위로만 업로드 할 수 있다. deploy 디렉토리는 항상 생성된다.

deploy:
  - provider : s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값
    bucket: dongguri-build # S3 버킷
    key: springBoot-webservice.zip # 빌드 파일을 압축해서 전달
    region: ap-northeast-2
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리 해당 위치의 파일들만 배포서버에 이동
    wait-until-deployed: true
    skip_cleanup: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값
    bucket: dongguri-build # S3 버킷
    key: springBoot-webservice.zip # 빌드 파일을 압축해서 전달
    build_type: zip # 압축 확장자
    application: springBoot-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: springBoot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - sk1737030@ubncorp.kr
